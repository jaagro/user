<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jaagro.user.biz.mapper.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.jaagro.user.biz.entity.Employee" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="employee_name" property="employeeName" jdbcType="VARCHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="phone_number" property="phoneNumber" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="gender" property="gender" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="BIGINT" />
    <result column="modify_user" property="modifyUser" jdbcType="BIGINT" />
    <result column="notes" property="notes" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, employee_name, login_name, password, phone_number, salt, email, status, avatar, 
    birthday, gender, create_time, modify_time, create_user, modify_user, notes, department_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from employee
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jaagro.user.biz.entity.Employee" >
    insert into employee (id, employee_name, login_name, 
      password, phone_number, salt, 
      email, status, avatar, 
      birthday, gender, create_time, 
      modify_time, create_user, modify_user, 
      notes, department_id)
    values (#{id,jdbcType=BIGINT}, #{employeeName,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{avatar,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=TIMESTAMP}, #{gender,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=BIGINT}, #{modifyUser,jdbcType=BIGINT}, 
      #{notes,jdbcType=VARCHAR}, #{departmentId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.jaagro.user.biz.entity.Employee" >
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="employeeName != null" >
        employee_name,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="phoneNumber != null" >
        phone_number,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="modifyUser != null" >
        modify_user,
      </if>
      <if test="notes != null" >
        notes,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="employeeName != null" >
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="modifyUser != null" >
        #{modifyUser,jdbcType=BIGINT},
      </if>
      <if test="notes != null" >
        #{notes,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jaagro.user.biz.entity.Employee" >
    update employee
    <set >
      <if test="employeeName != null" >
        employee_name = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="modifyUser != null" >
        modify_user = #{modifyUser,jdbcType=BIGINT},
      </if>
      <if test="notes != null" >
        notes = #{notes,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jaagro.user.biz.entity.Employee" >
    update employee
    set employee_name = #{employeeName,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      avatar = #{avatar,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      gender = #{gender,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      modify_user = #{modifyUser,jdbcType=BIGINT},
      notes = #{notes,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>